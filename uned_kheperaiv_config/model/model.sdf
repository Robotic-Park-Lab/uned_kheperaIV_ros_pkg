<?xml version='1.0'?>
<!--
  Gazebo ROS differential drive plugin

  Try sending commands:

    ros2 topic pub /khepera_IV/cmd_vel geometry_msgs/Twist '{linear: {x: 0.05}}' -1

    ros2 topic pub /khepera_IV/cmd_vel geometry_msgs/Twist '{angular: {z: 0.1}}' -1

  Try listening to odometry:

    ros2 topic echo /demo/odom

  Try listening to TF:

    ros2 run tf2_ros tf2_echo odom chassis

    ros2 run tf2_ros tf2_echo chassis right_wheel

    ros2 run tf2_ros tf2_echo chassis left_wheel
-->
<sdf version='1.6'>
  <model name='Khepera_IV'>
    <pose>0 0 0 0 -0 0</pose>

    <link name='chassis'>
      <pose>0 0 0.0 0 -0 0</pose>
      <inertial>
        <mass>0.5</mass>
        <inertia>
          <ixx>0.0007365</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.0007365</iyy>
          <iyz>0</iyz>
          <izz>0.001239</izz>
        </inertia>
      </inertial>
      <visual name='visual'>
        <geometry>
          <mesh>
            <uri>model://khepera_IV/files/Empty_robot.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
      </visual>
      <collision name='collision'>
        <geometry>
          <mesh>
            <uri>model://khepera_IV/files/Empty_robot.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
      </collision>

      <sensor type="ray" name="range0">
        <always_on>true</always_on>
        <visualize>false</visualize>
        <update_rate>30</update_rate>
        <pose>0.0 0.0645 0.045 0.0 0 1.5707</pose>
        <ray>
          <scan>
            <horizontal>
              <samples>20</samples>
              <resolution>1</resolution>
              <min_angle>-0.5235</min_angle>
              <max_angle>0.5235</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.25</min>
            <max>2.5</max>
            <resolution>0.02</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="range0" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=range0</remapping>
          </ros>
          <radiation_type>ultrasound</radiation_type>
          <output_type>sensor_msgs/Range</output_type>
        </plugin>
      </sensor>
      <sensor type="ray" name="range1">
        <always_on>true</always_on>
        <visualize>false</visualize>
        <update_rate>30</update_rate>
        <pose>0.04561 0.04561 0.045 0.0 0 0.7853</pose>
        <ray>
          <scan>
            <horizontal>
              <samples>20</samples>
              <resolution>1</resolution>
              <min_angle>-0.5235</min_angle>
              <max_angle>0.5235</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.25</min>
            <max>2.5</max>
            <resolution>0.02</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="range1" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=range1</remapping>
          </ros>
          <radiation_type>ultrasound</radiation_type>
          <output_type>sensor_msgs/Range</output_type>
        </plugin>
      </sensor>
      <sensor type="ray" name="range2">
        <always_on>true</always_on>
        <visualize>false</visualize>
        <update_rate>30</update_rate>
        <pose>0.0645 0.0 0.045 0.0 0 0</pose>
        <ray>
          <scan>
            <horizontal>
              <samples>20</samples>
              <resolution>1</resolution>
              <min_angle>-0.5235</min_angle>
              <max_angle>0.5235</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.25</min>
            <max>2.5</max>
            <resolution>0.02</resolution>
          </range>
        </ray>
        <plugin name="range2" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=range2</remapping>
          </ros>
          <radiation_type>ultrasound</radiation_type>
          <output_type>sensor_msgs/Range</output_type>
        </plugin>
      </sensor>
      <sensor type="ray" name="range3">
        <always_on>true</always_on>
        <visualize>false</visualize>
        <update_rate>30</update_rate>
        <pose>0.04561 -0.04561 0.045 0.0 0 -0.7853</pose>
        <ray>
          <scan>
            <horizontal>
              <samples>20</samples>
              <resolution>1</resolution>
              <min_angle>-0.5235</min_angle>
              <max_angle>0.5235</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.25</min>
            <max>2.5</max>
            <resolution>0.02</resolution>
          </range>
        </ray>
        <plugin name="range3" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=range3</remapping>
          </ros>
          <radiation_type>ultrasound</radiation_type>
          <output_type>sensor_msgs/Range</output_type>
        </plugin>
      </sensor>
      <sensor type="ray" name="range4">
        <always_on>true</always_on>
        <visualize>false</visualize>
        <update_rate>30</update_rate>
        <pose>0.0 -0.0645 0.045 0.0 0 -1.5707</pose>
        <ray>
          <scan>
            <horizontal>
              <samples>20</samples>
              <resolution>1</resolution>
              <min_angle>-0.5235</min_angle>
              <max_angle>0.5235</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.25</min>
            <max>2.5</max>
            <resolution>0.02</resolution>
          </range>
        </ray>
        <plugin name="range4" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=range4</remapping>
          </ros>
          <radiation_type>ultrasound</radiation_type>
          <output_type>sensor_msgs/Range</output_type>
        </plugin>
      </sensor>
      <sensor name="imu_sensor" type="imu">
        <pose>0.0 0.0 0.04 0.0 0 0.0</pose>
        <always_on>true</always_on>
        <update_rate>30</update_rate>
        <plugin name="imu_plugin" filename="libgazebo_ros_imu_sensor.so">
          <ros>         <!-- Will publish to /imu/data -->
            <remapping>~/out:=imu/data</remapping>
          </ros>
        </plugin>
      </sensor>
      <sensor type="camera" name="camera">
        <pose>0.0645 0.0 0.025 0.0 0 0</pose>
          <update_rate>30.0</update_rate>
          <camera name="head">  <!-- TODO does this name do anything? -->
              <horizontal_fov>0.96</horizontal_fov>
              <image>
                  <width>960</width>
                  <height>720</height>
                  <format>R8G8B8</format>
              </image>
              <clip>
                  <near>0.1</near>
                  <far>300</far>
              </clip>
              <noise>
                  <type>gaussian</type>
                  <!-- Noise is sampled independently per pixel on each frame.
                       That pixel's noise value is added to each of its color
                       channels, which at that point lie in the range [0,1]. -->
                  <mean>0.0</mean>
                  <stddev>0.007</stddev>
              </noise>
          </camera>
          <plugin name="camera" filename="libgazebo_ros_camera.so">
              <alwaysOn>true</alwaysOn>
              <updateRate>0.0</updateRate>
              <cameraName>this_is_ignored</cameraName>
              <imageTopicName>image_raw</imageTopicName>
              <cameraInfoTopicName>camera_info</cameraInfoTopicName>
              <frameName>chassis</frameName>
              <hackBaseline>0.07</hackBaseline>
              <distortionK1>0.0</distortionK1>
              <distortionK2>0.0</distortionK2>
              <distortionK3>0.0</distortionK3>
              <distortionT1>0.0</distortionT1>
              <distortionT2>0.0</distortionT2>
          </plugin>
      </sensor>
    </link>

    <link name='left_wheel'>
      <pose>0 0.0527 0.021 -1.57070 0 0</pose>
      <inertial>
        <mass>0.02</mass>
        <inertia>
          <ixx>0.000003</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000003</iyy>
          <iyz>0</iyz>
          <izz>0.000003</izz>
        </inertia>
      </inertial>
      <visual name='visual'>
        <geometry>
          <mesh>
            <uri>model://khepera_IV/files/wheel.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
      </visual>
      <collision name='collision'>
        <geometry>
          <mesh>
            <uri>model://khepera_IV/files/wheel.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1</mu>
              <mu2>1</mu2>
              <slip1>0</slip1>
              <slip2>0</slip2>
            </ode>
          </friction>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+13</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.01</min_depth>
            </ode>
          </contact>
        </surface>
      </collision>
    </link>
    <link name='right_wheel'>
      <pose>0 -0.0527 0.021 -1.5707 0 0</pose>
      <inertial>
        <mass>0.02</mass>
        <inertia>
          <ixx>0.000003</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000003</iyy>
          <iyz>0</iyz>
          <izz>0.000003</izz>
        </inertia>
      </inertial>
      <visual name='visual'>
        <geometry>
          <mesh>
            <uri>model://khepera_IV/files/wheel.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
      </visual>
      <collision name='collision'>
        <geometry>
          <mesh>
            <uri>model://khepera_IV/files/wheel.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1</mu>
              <mu2>1</mu2>
              <slip1>0</slip1>
              <slip2>0</slip2>
            </ode>
          </friction>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+13</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.01</min_depth>
            </ode>
          </contact>
        </surface>
      </collision>
    </link>
    <link name='front_caster'>
      <pose>0.05 0 0.006614 0 -0 0</pose>
      <visual name='visual'>
        <geometry>
          <mesh>
            <uri>model://khepera_IV/files/caster.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
      </visual>
      <collision name='collision'>
        <geometry>
          <mesh>
            <uri>model://khepera_IV/files/caster.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
      </collision>
    </link>
    <link name='back_caster'>
      <pose>-0.05 0 0.006614 0 -0 0</pose>
      <visual name='visual'>
        <geometry>
          <mesh>
            <uri>model://khepera_IV/files/caster.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
      </visual>
      <collision name='collision'>
        <geometry>
          <mesh>
            <uri>model://khepera_IV/files/caster.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
      </collision>
    </link>

    <joint name='left_wheel_joint' type='revolute'>
      <parent>chassis</parent>
      <child>left_wheel</child>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1.79769e+308</lower>
          <upper>1.79769e+308</upper>
        </limit>
      </axis>
    </joint>
    <joint name='right_wheel_joint' type='revolute'>
      <parent>chassis</parent>
      <child>right_wheel</child>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1.79769e+308</lower>
          <upper>1.79769e+308</upper>
        </limit>
      </axis>
    </joint>
    <joint name='front_caster_wheel' type='ball'>
      <parent>chassis</parent>
      <child>front_caster</child>
    </joint>
    <joint name='back_caster_wheel' type='ball'>
      <parent>chassis</parent>
      <child>back_caster</child>
    </joint>

    <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>
      <ros>
        <remapping>odom:=odom</remapping>
      </ros>
      <!-- wheels -->
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <!-- kinematics -->
      <wheel_separation>0.1054</wheel_separation>
      <wheel_diameter>0.021</wheel_diameter>
      <!-- limits -->
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>
      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>

      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>chassis</robot_base_frame>
    </plugin>

    <plugin name="ground_truth" filename="libgazebo_ros_p3d.so">
        <ros>
            <remapping>odom:=ground_truth</remapping>
        </ros>
        <frame_name>map</frame_name>
        <body_name>chassis</body_name>
        <update_rate>100.0</update_rate>
        <gaussian_noise>0.01</gaussian_noise>
    </plugin>
  </model>

</sdf>
